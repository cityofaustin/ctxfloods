language: node_js
node_js:
- 8
addons:
  postgresql: 9.5
  apt:
    packages:
    - postgresql-9.5-postgis-2.3
services:
- postgresql
jobs:
  include:
  - stage: Test Backend Locally
    before_script: cd backend; yarn; yarn init-local-db; yarn local-drop-rebuild;
    script: cd backend; yarn postgraphql-local & yarn test
  - stage: Test Frontend Locally
    before_script: cd backend; yarn; yarn init-local-db; yarn local-drop-rebuild;
    script: cd backend; yarn postgraphql-local & cd ../frontend; yarn; yarn get-schema;
      yarn test
  - stage: Deploy Backend to AWS
    before_script:
    - if [ -z "$AWS_ACCESS_KEY_ID" ]; then echo "AWS Credentials not set. Skipping
      deployment."; travis_terminate 0; else npm install -g serverless; fi
    script: cd backend; yarn; yarn rebuild-and-deploy
  - stage: Test backend against AWS endpoint
    before_script:
    - if [ -z "$AWS_ACCESS_KEY_ID" ]; then echo "AWS Credentials not set. Skipping
      tests."; travis_terminate 0; else npm install -g serverless; fi
    script: cd backend; yarn; yarn test-on-aws
    after_script: cd backend; yarn; yarn rebuild-and-deploy
  - stage: Deploy frontend to s3
    before_script:
    - if [ -z "$AWS_ACCESS_KEY_ID" ]; then echo "AWS Credentials not set. Skipping
      deployment."; travis_terminate 0; fi
    script: cd frontend; yarn; yarn build
    deploy:
      provider: s3
      access_key_id: "$AWS_ACCESS_KEY_ID"
      secret_access_key: "$AWS_SECRET_ACCESS_KEY"
      bucket: "$S3_BUCKET"
      skip_cleanup: true
      local_dir: build
      acl: public_read
      on:
        all_branches: true
