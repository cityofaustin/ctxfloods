const aws = require('aws-sdk');
const cloudFront = new aws.CloudFront();

// This function clears the cloudFront cache for production deployments.
// Without this function, new code changes would not be implemented until the old cache expired.
cloudFront.listDistributions({}).promise()
.then((data) => {
  const invalidationPromises = data.Items.filter((item) => {
    return (
      item.Aliases.Items[0] === "floodstest.austintexas.io" ||
      item.Aliases.Items[0] === "floods.austintexas.io"
    )
  }).map((item) => cloudFront.createInvalidation({
    DistributionId: item.Id,
    InvalidationBatch: {
      CallerReference: Math.round((new Date()).getTime() / 1000).toString(), // unqiueId generated by unix timestamp
      Paths: {
        Quantity: 1, // refers to number of paths in Items array
        Items: [
          "/*" //Invalidate everything on new deployments
        ]
      }
    }
  }).promise())
  return Promise.all(invalidationPromises);
})
.then(() => {
  console.log("CloudFront Invalidations created. Will be complete in about 5 minutes.");
})
.catch((err) => {
  console.log(`CloudFront Invalidations failed.`, err);
  process.exit(1);
})
