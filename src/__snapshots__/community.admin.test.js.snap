// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`As a community admin When adding a crossing NOT to the same community as the user should fail to add the crossing 1`] = `[Error: GraphQL Error: Users can only add crossings to their communities]`;

exports[`As a community admin When adding a crossing to the same community as the user the new crossing should show up in the DB 1`] = `
Object {
  "crossingById": Object {
    "communityCrossingsByCrossingId": Object {
      "nodes": Array [
        Object {
          "communityId": 1,
        },
      ],
    },
    "description": "Describe!",
    "humanAddress": "Near the barn",
    "name": "New Crossing",
  },
}
`;

exports[`As a community admin When updating the status of a crossing In the same community as the user the new status should show up in the DB 1`] = `
Object {
  "crossingById": Object {
    "latestStatus": Object {
      "notes": "THIS IS A STATUS UPDATE TEST",
    },
  },
}
`;

exports[`As a community admin When updating the status of a crossing NOT in the same community as the user should fail to update the status 1`] = `[Error: GraphQL Error: Users can only update the status of crossings within their communities]`;

exports[`As a community admin should fail to delete a crossing from antother community 1`] = `[Error: GraphQL Error: Community administrators can only delete crossings in their community]`;

exports[`As a community admin should fail to delete a user from another community 1`] = `[Error: GraphQL Error: Cannot query field "removeUser" on type "Mutation". Did you mean "registerUser", "reactivateUser", "deactivateUser", or "removeCrossing"?]`;

exports[`As a community admin should fail to register a new admin 1`] = `[Error: GraphQL Error: Community administrators can only add editors to the communities they administrate]`;

exports[`As a community admin should get the correct current user 1`] = `
Object {
  "currentUser": Object {
    "id": 2,
  },
}
`;
